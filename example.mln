

let
    (x, y) = (1, 2)
    %{1: (a, b)} = %{1 : (2, 3), 2 : (3, 4)}
then {
    x + 1
    a + b
}


f = fn (x) = x + 1
fn g (x) = x * 2

f >> g <| 1 <| .print # 4

x = 1
s : union[int, List[int, 2]]
s = (1, [2, 3])

case s of
    (1, [2, &x]) => err ""
    (&x,[2,  3]) => err ""



/*

s = (1, [2, 3])




*/







